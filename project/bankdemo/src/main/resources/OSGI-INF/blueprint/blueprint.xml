<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:camel="http://camel.apache.org/schema/blueprint"
       xsi:schemaLocation="
       http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
       http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">
 	
 	<bean id="dataSourcePS" class="org.apache.commons.dbcp.BasicDataSource">
    	<property name="driverClassName" value="org.h2.Driver"/>
    	<property name="url" value="jdbc:h2:mem:demo;DB_CLOSE_DELAY=-1" />
    	<property name="username" value=""/>
  		<property name="password" value=""/>
  	</bean> 
  
  	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSourcePS" />
  	</bean>
  
	<bean id="required" class="org.apache.camel.spring.spi.SpringTransactionPolicy">
		<property name="transactionManager" ref="txManager"/>
		<property name="propagationBehaviorName" value="PROPAGATION_REQUIRED"/>
	</bean>
 
	<bean id="bankbean" class="org.blogdemo.bankdemo.BankBean" />
  <camelContext trace="false" id="blueprintContext" xmlns="http://camel.apache.org/schema/blueprint">
    <onException>
        <exception>java.lang.Exception</exception>
        <redeliveryPolicy maximumRedeliveries="1"/>
        <handled>
            <constant>true</constant>
        </handled>
        <to uri="direct:handleFail"/>
    </onException>
    <route id="createTableRoute">
        <from uri="timer:foo?repeatCount=1"/>
        <setBody>
            <constant>CREATE TABLE customerdemo (customerID character varying(10) NOT NULL,vipStatus character varying(10) NOT NULL ,  balance integer NOT NULL);</constant>
        </setBody>
        <to uri="jdbc:dataSourcePS"/>
    </route>
    <route id="insertTableRoute">
        <from uri="timer:foo?repeatCount=1"/>
        <setBody>
            <constant>INSERT INTO customerdemo (customerID,vipStatus,balance) VALUES ('A01','Diamond',1000);
            INSERT INTO customerdemo (customerID,vipStatus,balance) VALUES ('A02','Gold',500); </constant>
        </setBody>
        <to uri="jdbc:dataSourcePS"/>
    </route>
    <route id="readFile">
        <from uri="file://inputdir?delete=true"/>
        <split>
            <xpath>//Bank/Transaction</xpath>
            <to uri="direct:processTransaction"/>
        </split>
    </route>
    <route id="processTransaction">
        <from uri="direct:processTransaction"/>
        <setHeader headerName="CustId">
            <xpath>/Transaction/CustId/text()</xpath>
        </setHeader>
        <setHeader headerName="VipStatus">
            <simple>/Transaction/VipStatus/text()</simple>
        </setHeader>
        <setHeader headerName="amt">
            <xpath>/Transaction/Detail/amount/text()</xpath>
        </setHeader>
        <setHeader headerName="transacontent">
            <simple>${body}</simple>
        </setHeader>
        <choice>
            <when>
                <xpath>/Transaction[@type='Cash']</xpath>
                <to uri="direct:processCash"/>
            </when>
            <when>
                <xpath>/Transaction[@type='Transfer']</xpath>
                <setHeader headerName="receiverId">
                    <xpath>/Transaction/Detail/CustId/text()</xpath>
                </setHeader>
                <to uri="direct:doTransfer"/>
            </when>
        </choice>
    </route>
    <route id="failedRoute">
        <from uri="direct:handleFail"/>
        <log message="ERROR => ${header.CamelExceptionCaught}"/>
        <setBody>
            <simple>${header.transacontent} &lt;exceptionInfo&gt;${header.CamelExceptionCaught}&lt;/exceptionInfo&gt;</simple>
        </setBody>
        <to uri="file://errordir?fileName=error-$simple{date:now:yyyyMMddhhmmss}.xml"/>
    </route>
    <route id="processCash">
        <from uri="direct:processCash"/>
        <setBody>
            <simple>SELECT balance from customerdemo where customerID = '${header.CustId}';</simple>
        </setBody>
        <to uri="jdbc:dataSourcePS"/>
        <bean method="doBalanceWithoutFee" ref="bankbean"/>
        <setBody>
            <simple>UPDATE customerdemo SET balance = ${body} where customerID = '${header.CustId}';</simple>
        </setBody>
        <to uri="jdbc:dataSourcePS"/>
    </route>
    <route id="doTransfer">
        <from uri="direct:doTransfer"/>
        <setBody>
            <simple>SELECT balance from customerdemo where customerID = '${header.CustId}';</simple>
        </setBody>
        <to uri="jdbc:dataSourcePS"/>
        <bean method="transfer" ref="bankbean"/>
        <bean method="doBalance" ref="bankbean"/>
        <setHeader headerName="transfersql">
            <simple>UPDATE customerdemo SET balance = ${body} where customerID = '${header.CustId}';</simple>
        </setHeader>
        <setBody>
            <simple>SELECT balance from customerdemo where customerID = '${header.receiverId}';</simple>
        </setBody>
        <to uri="jdbc:dataSourcePS"/>
        <bean method="transfer" ref="bankbean"/>
        <bean method="doBalanceWithoutFee" ref="bankbean"/>
        <setBody>
            <simple>${header.transfersql}  UPDATE customerdemo SET balance = ${body} where customerID = '${header.receiverId}';</simple>
        </setBody>
        <to uri="jdbc:dataSourcePS"/>
    </route>
    <route id="selectTableRoute">
        <from uri="timer:foo?period=10000"/>
        <setBody>
            <constant>select * from customerdemo</constant>
        </setBody>
        <to uri="jdbc:dataSourcePS"/>
        <log message="${body}"/>
    </route>
</camelContext>

</blueprint>
